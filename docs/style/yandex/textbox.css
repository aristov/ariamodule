.textbox
{
    display: inline-block;
    position: relative;
}
.textbox > .box
{
    background: #fff;
    border: 1px solid rgba(0, 0, 0, 0.2);
    font: inherit;
    padding: 5px 8px;
    outline: none;
    box-sizing: border-box;
    width: 180px;
}
.textbox:hover > .box
{
    border-color: rgba(0, 0, 0, 0.3);
}
.textbox > .box:focus,
.textbox.focus > .box
{
    border-color: #ffdb4d;
    box-shadow: inset 0 0 0 1px #ffdb4d;
}
.textbox.disabled,
.textbox > .box:disabled
{
    cursor: default;
    color: rgba(0, 0, 0, 0.5);
}
.textbox > .box:disabled
{
    background: rgba(0, 0, 0, 0.08);
    border-color: transparent;
}
.textbox[aria-label]::before
{
    content: attr(aria-label);
    display: block;
    margin-bottom: 5px;
    cursor: default;
}
.textbox.hasclear > .box
{
    padding-right: 26px;
}
.textbox .clearbutton
{
    display: none;
    width: 27px;
    height: 27px;
    background: url(images/cross.svg) no-repeat 50% 50%;
    position: absolute;
    right: 1px;
    opacity: 0.25;
    outline: none;
}
.textbox:hover .clearbutton,
.textbox.focus .clearbutton
{
    display: inline-block;
}
.textbox:not(.disabled) .clearbutton:hover
{
    cursor: pointer;
    opacity: 1;
}
.textbox[aria-invalid=true] > .box
{
    border-color: red;
}

.textboxgroup
{
    display: inline-block;
}
.textboxgroup .textbox:not(:last-child) > .box
{
    border-right: none;
}
.textboxgroup .textbox.focus + .textbox > .box
{
    border-left-color: #ffdb4d;
}
.textboxgroup .textbox.hover:not(.focus) + .textbox:not(:focus) > .box
{
    border-left-color: rgba(0, 0, 0, 0.3);
}


/*.textboxgroup
{
    display: inline-block;
}
.textboxgroup .textinput:not(:focus):not(:last-of-type)
{
    border-right-width: 0;
}
.textboxgroup .textinput:focus + .textinput
{
    border-left-width: 0;
}
.textboxgroup .textinput[aria-checked=true] + .textinput:not(:focus):not(:hover)
{
    border-left-color: rgba(153, 122, 0, 0.5);
}
.textboxgroup:hover .textinput:hover + .textinput:not(:focus)
{
    border-left-color: rgba(0, 0, 0, 0.3);
}*/
